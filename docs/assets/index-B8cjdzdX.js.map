{"version":3,"file":"index-B8cjdzdX.js","sources":["../../src/js/core/pixel.js","../../src/js/img2pxl.js","../../src/index.html?html-proxy&index=0.js"],"sourcesContent":["/**\n * @description Pixel class\n * @author      C. M. de Picciotto <d3p1@d3p1.dev> (https://d3p1.dev/)\n */\nexport default class Pixel {\n  /**\n   * @type {number}\n   */\n  x\n\n  /**\n   * @type {number}\n   */\n  y\n\n  /**\n   * @type {number}\n   */\n  width\n\n  /**\n   * @type {number}\n   */\n  height\n\n  /**\n   * @param {HTMLImageElement}\n   */\n  #img\n\n  /**\n   * @type {number}\n   */\n  #imgX\n\n  /**\n   * @type {number}\n   */\n  #imgY\n\n  /**\n   * @type {number}\n   */\n  #force\n\n  /**\n   * Constructor\n   *\n   * @param {HTMLImageElement} img\n   * @param {number}           x\n   * @param {number}           y\n   * @param {number}           width\n   * @param {number}           height\n   * @param {number}           force\n   */\n  constructor(img, x, y, width, height, force) {\n    this.x = x\n    this.y = y\n    this.width = width\n    this.height = height\n    this.#img = img\n    this.#imgX = x\n    this.#imgY = y\n    this.#force = force\n  }\n\n  /**\n   * Draw particle\n   *\n   * @param   {CanvasRenderingContext2D} ctx\n   * @returns {void}\n   */\n  draw(ctx) {\n    ctx.drawImage(\n      this.#img,\n      this.#imgX,\n      this.#imgY,\n      this.width,\n      this.height,\n      this.x,\n      this.y,\n      this.width,\n      this.height,\n    )\n  }\n\n  /**\n   * Update pixel location\n   *\n   * @param   {number} t Elapsed time (in milliseconds) from last drawing\n   * @returns {void}\n   * @todo    Use integer values for pixel coordinates to avoid antti-aliasing\n   */\n  update(t) {\n    if (this.x === this.#imgX && this.y === this.#imgY) {\n      return\n    }\n\n    const xDistance = this.x - this.#imgX\n    const yDistance = this.y - this.#imgY\n    this.x -= xDistance * this.#force * (t / 250)\n    this.y -= yDistance * this.#force * (t / 250)\n  }\n}\n","/**\n * @description img2pxl.js\n * @author      C. M. de Picciotto <d3p1@d3p1.dev> (https://d3p1.dev/)\n * @todo        Create pointer object and improve how pixel and pointer interact\n */\nimport Pixel from './core/pixel.js'\n\nexport default class Img2Pxl {\n  /**\n   * @type {Pixel[]}\n   */\n  #pixels = []\n\n  /**\n   * @type {number}\n   */\n  #pixelForce\n\n  /**\n   * @type {number}\n   */\n  #pointerForce\n\n  /**\n   * @type {number}\n   */\n  #pointerRadius\n\n  /**\n   * @type {number|null}\n   */\n  #pointerX = null\n\n  /**\n   * @type {number|null}\n   */\n  #pointerY = null\n\n  /**\n   * @type {HTMLCanvasElement}\n   */\n  #canvas\n\n  /**\n   * @type {CanvasRenderingContext2D}\n   */\n  #ctx\n\n  /**\n   * @type {number}\n   */\n  #t = 0\n\n  /**\n   * Constructor\n   *\n   * @param {string} imageSrc\n   * @param {number} resolutionWidth\n   * @param {number} resolutionHeight\n   * @param {number} pixelForce\n   * @param {number} pointerForce\n   * @param {number} pointerRadius\n   */\n  constructor(\n    imageSrc,\n    resolutionWidth,\n    resolutionHeight,\n    pixelForce,\n    pointerForce,\n    pointerRadius,\n  ) {\n    this.#initCanvas()\n    this.#initImage(imageSrc, resolutionWidth, resolutionHeight)\n    this.#initPointer()\n    this.#pixelForce = pixelForce\n    this.#pointerForce = pointerForce\n    this.#pointerRadius = pointerRadius\n  }\n\n  /**\n   * Animate\n   *\n   * @param   {number} t\n   * @returns {void}\n   * @todo    Use integer values for pixel coordinates to avoid antti-aliasing\n   */\n  animate(t = 0) {\n    const elapsed = t - this.#t\n    this.#t = t\n\n    this.#ctx.clearRect(0, 0, this.#canvas.width, this.#canvas.height)\n\n    for (const pixel of this.#pixels) {\n      if (this.#pointerX && this.#pointerY) {\n        const xDistance = pixel.x - this.#pointerX\n        const yDistance = pixel.y - this.#pointerY\n        const squareDistance = xDistance ** 2 + yDistance ** 2\n\n        if (squareDistance <= this.#pointerRadius ** 2) {\n          pixel.x += xDistance * (this.#pointerForce / squareDistance) * elapsed\n          pixel.y += yDistance * (this.#pointerForce / squareDistance) * elapsed\n        }\n      }\n      pixel.update(elapsed)\n      pixel.draw(this.#ctx)\n    }\n\n    requestAnimationFrame(this.animate.bind(this))\n  }\n\n  /**\n   * Init pointer\n   *\n   * @returns {void}\n   */\n  #initPointer() {\n    this.#canvas.addEventListener('mousemove', (e) => {\n      this.#pointerX = e.offsetX\n      this.#pointerY = e.offsetY\n    })\n\n    this.#canvas.addEventListener('mouseout', () => {\n      this.#pointerX = null\n      this.#pointerY = null\n    })\n  }\n\n  /**\n   * Init canvas\n   *\n   * @returns {void}\n   */\n  #initCanvas() {\n    this.#canvas = document.createElement('canvas')\n    this.#ctx = this.#canvas.getContext('2d')\n    document.body.appendChild(this.#canvas)\n  }\n\n  /**\n   * Init image\n   *\n   * @param   {string} src\n   * @param   {number} resolutionWidth\n   * @param   {number} resolutionHeight\n   * @returns {void}\n   */\n  #initImage(src, resolutionWidth, resolutionHeight) {\n    const img = new Image()\n    img.src = src\n    img.onload = () => {\n      this.#canvas.width = img.width\n      this.#canvas.height = img.height\n      this.#initPixels(img, resolutionWidth, resolutionHeight)\n    }\n  }\n\n  /**\n   * Init image pixels\n   *\n   * @param   {HTMLImageElement} img\n   * @param   {number}           resolutionWidth\n   * @param   {number}           resolutionHeight\n   * @returns {void}\n   */\n  #initPixels(img, resolutionWidth, resolutionHeight) {\n    const pixelWidth = img.width / resolutionWidth\n    const pixelHeight = img.height / resolutionHeight\n\n    for (let i = 0; i < resolutionWidth * resolutionHeight; i++) {\n      const xDisplacement = pixelWidth * i\n      this.#pixels.push(\n        new Pixel(\n          img,\n          xDisplacement % img.width,\n          pixelHeight * (xDisplacement / img.width),\n          pixelWidth,\n          pixelHeight,\n          this.#pixelForce,\n        ),\n      )\n    }\n  }\n}\n","\n    import Img2Pxl from './js/img2pxl.js'\n\n    new Img2Pxl('./images/logo.png', 70, 70, 0.3, 0.6, 40).animate()\n  "],"names":["Pixel","img","x","y","width","height","force","__publicField","__privateAdd","_img","_imgX","_imgY","_force","__privateSet","ctx","__privateGet","xDistance","yDistance","Img2Pxl","imageSrc","resolutionWidth","resolutionHeight","pixelForce","pointerForce","pointerRadius","_Img2Pxl_instances","_pixels","_pixelForce","_pointerForce","_pointerRadius","_pointerX","_pointerY","_canvas","_ctx","_t","__privateMethod","initCanvas_fn","initImage_fn","initPointer_fn","elapsed","pixel","squareDistance","e","src","initPixels_fn","pixelWidth","pixelHeight","i","xDisplacement"],"mappings":"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"}